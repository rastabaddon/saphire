#version 330 

layout(location = 0) in vec3 vertex;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 uv;

//MATRYCE
uniform mat4 projectionMatrix;
uniform mat4 cameraMatrix;
uniform mat4 modelMatrix;
				  
//COLORS
uniform vec4 ambientColor;
uniform vec4 diffuseColor;
uniform vec4 specularColor;

//LIGHT POS
uniform vec3 vLightPosition;

//matrix

uniform mat4 normalMatrix;

smooth out vec3 vVaryingNormal;
smooth out vec3 vVaryingLightDir;
smooth out vec3 vVaryingLight;
smooth out vec4 vColor;
smooth out vec2 vUV;
varying  vec2 texPos;

void main(){
	
	//vec4 vLightPos = vec4(-10,-10,-30,1);

	vec4 vPosition = vec4(vertex, 1.0);
	vec4 vNormal = vec4(normal,1.0);
	
	vec4 vPosition4 =   vPosition;
	vec3 vPosition3 = vPosition4.xyz / vPosition4.w;

	vVaryingNormal = vec4(normalMatrix * vNormal).xyz;
	vVaryingLightDir = normalize(vLightPosition.xyz - vPosition3 );
	vUV = normal.xy;
	texPos = uv;
	 
	//vColor = vec4(0,0,0,1);
	vColor = ambientColor; //vec4(0.5,0.5,0.5,1);
	gl_Position = (projectionMatrix * cameraMatrix * modelMatrix) * vPosition;
}


